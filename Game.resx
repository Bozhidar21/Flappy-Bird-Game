<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="gameTimer.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>49</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgADAA0CBwQYBwAMGQQCBhkFBAcZAQkAGQEF
        ABkBBQAZAAgAGQAMABkFAwgZAQACGQABABkBBQAZAQIAGQAAABkACAAZAAwAGQAFABkAAAAZAAQAGQIS
        ABkBBQAYAAAADQAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAADX/BgAPYwAgH5oLjSyeHrkppRi6I7ALuimk
        Gbopphe6H7YEuh61A7olrBC6MZ8muimPHLouOS26KUQluh2pBLoiYxa6MzEzuitrJrouoiC6JqQTui9D
        Lbo2OjW6HXkOuh6yA7kbnwOND1sBIDL/BQAAAAAAAAAAAAAAAAAGIgAAAAAAAB+8AYApxA//OLMs/yGy
        CP8clgb/JbQO/y6nHv8niBr/Lp0h/yyRIP8phR//H38Q/5ejlf+ElYL/H5oK/02YQP+6t7v/SXJG/zat
        KP8yriT/iaGG/9rY2v9tjWj/IrQJ/ybICv8rnB2BAAAcAAcUBgAAAAAAAAAAABNkBAANWAAEKMMOqy7A
        GP80tiX/Mokk/3BzcP8zjCf/O343/3Jyc/88Uzr/cHtv/4eMhv94fHj/t7i3/8fHyP9keGH/V3VS/+Li
        4/+Rk5H/QXY5/yiVGf9ic2D/5ePl/7/Gvf8zmSf/OLQr/yqzF6sAKgAED0gEAAAAAAAAAAAAGmISABNf
        CQQ2ryqtNbUn/yTJCP9Jnzr/0tHT/0mRQ/9RhlH/0dDR/5qZmf/v7+//+vr6/+Hh4f/Dw8P/+fn5/+vq
        6/+cm53/7Ozs//n5+f+2ubb/SWJG/6CjoP/p6On/wMXA/y+gH/8lzAn/IMIDrQYxAAQOUQIAAAAAAAAA
        AAAYZA4AHVEaBCXHCa0jzgT/IM8A/0ieOv/Rz9L/R19H/0ZcRv/Ozs7/t7e3/+bm5v/Dw8P/4ODg/8TE
        xP/CwsL/6enp/7y8vP/U1NT/yMjI/9rZ2v+0s7T/9fT0//Tz9P+/xb7/LaEZ/y/BG/82ryatEi4MBBdK
        EQAAAAAAAAAAAB9jFwApUSkEKsERrSfIC/8kyAj/SZo8/+Lh4//Hxsf/lZWV/83Nzf+2tbb/7Ozs/9PT
        0//g4OD/xMTE/9LS0v/u7u7/u7u7/9vb2//Y19f/2tra/8PDw//T09P/zs7O/8LGwv9EkD7/YLtX/23B
        Y60aNBUELVIoAAAAAAAAAAAAQGw7AE1tRwRVrk6tU7FM/1GwSv9fjlz/6Ofo//X19f+0tLT/zc3N/4qR
        if/e4N7/8vDy/9XT1f+7ubv/8fDx/8zQzP+Jj4j/5ePl/+bn5/+cpJr/ubq5/9PS0//NzM3/x8rG/2yv
        Y/990m//edRqrRs3FQQyWSsAAAAAAAAAAABHcUAAO1w1BHrGbq2D13f/hNh3/3mhcv/i4OL/w8PD/5OT
        k//Qz9D/cZhr/3Wpbf97pHX/dqBv/22VZ/97pHT/dbVr/2agXf94oHL/d6tv/2SqWf+BlX7/j52N/4yZ
        iv+KnIf/cLxk/33abv931mitGjYWBDFaKwAAAAAAAAAAAEV1PQA4YDIEes9srYTfdf+G33f/erxv/7nF
        t//p6Or/q6qr/8C+wP9yomn/edxo/3fWZ/9612r/d81p/3jQaf+A3nD/fdlv/3zcbP973Wv/fuNt/3TQ
        Zf90zmX/dM5m/3XOZ/993W3/e9xr/3fYZ60cNRcEMVorAAAAAAAAAAAARXU9ADhgMgR60WutguB0/4Th
        df+D4HP/drxq/3Wmbf9nmV//ZZJe/1qWT/9grVP/W6BQ/1ydUf9enFT/YqRX/2iyXP9rt17/b8Fh/3PK
        Zf983Wv/f+Vu/4Dob/+B53D/geZx/3/jbv983Wv/d9hnrRw0GAQxWisAAAAAAAAAAABFdD4AOF4yBHrN
        bK2D3XX/hd92/4PhdP+A3nD/edZp/23AXv9Tk0j/P283/zVcLv8qRyT/LUom/zNQLP8/ZTj/R3c//0p6
        Qf9UjUr/X6BT/2u6Xv941Wj/fuVt/4Dnb/+A5W//f+Nv/3zcbP931mitHTIZBDJZKwAAAAAAAAAAAEZ0
        PgA7YDMEesxsrYLadP+D2nX/gtt0/4Hcc/95zmr/XJ5R/zxoNv8eNh//GTs6/xVTc/8WWXz/GFh9/x9G
        UP8gNSj/IDUo/yU+Lf8rSTL/UopL/26/YP973mv/f+du/4Dlb/+A43D/fNht/3bNaK0dMBkEMVUrAAAA
        AAAAAAAARnc8AEFvNwR702ytfNVu/3zSbv980G//fM1v/22yYv9Qgkf/Jj8m/xREX/8bcqT/I6Lo/ySh
        5v8ec6n/EDN1/wosh/8KLIX/Ci2I/wsqfP8lQDb/Z69Z/3zbbP9/5W//f+Vv/4HkcP+A33D/eM5qrR0v
        GgQyVSwAAAAAAAAAAABHeT4AQW44BIThdK2G5Xb/huN3/4jgev+K3H3/fMJx/1eGTv8fT0H/C05Y/xZd
        dv8glsv/IKfX/xVSe/8OKnj/DCRn/wskaP8LJGj/CiJl/xUuUf9cmlj/gt1z/4Ljc/+C5HP/g+Rz/4Tk
        df991W6tHjEbBDRYLgAAAAAAAAAAAEx6RQBFbz8EjuOArZDmgv+P44H/kOCD/5Lehf98vXD/NG9Z/1C8
        wf957PH/T7/F/xh2fv8ax9P/Gr/J/xVQef8QLHj/EC15/xAuef8NKnf/Gz1y/2KaYv+N3X//jeCA/4zi
        f/+M4n7/jeJ//4XUeK0hMB0EOFcyAAAAAAAAAAAAUHtJAElxQwSV44itmOWL/5fgiv+W3Yr/l9+K/2+m
        ZP9Td3X/3P3////////O8vT/RXd5/xewt/8esLf/YH1+/6uqqP+qqaf/oaCf/05QS/9bilH/lNyH/5ne
        jf+b34//muCO/5rhjv+b4Y//k9OIrSQvIQQ9VzkAAAAAAAAAAABOeUcASHBCBJDfg62S4IX/k92G/5fd
        iv+a347/e7dx/3J+bv/Bvr//wsDA/5CZmv8pmqD/F8LL/0BjZP/X1dX//////8fHx/+Ih4j/cXZw/3Sw
        av+a4I7/n9+U/6PgmP+j4Zj/oOCW/6Dglf+X0oytJDAiBD9XOgAAAAAAAAAAAEt2QwBGbj0Eidl8rYrb
        ff+M2n//lt2K/6Dglf+f4JT/eq5y/01qR/8hMyz/HoaN/xvi7f8WxM3/R1la/+no6P//////19fY/3x8
        fP9ogGT/hMV4/5rfjv+g4ZT/peOa/6Xkm/+i45b/n+KT/5TUia0jLyAEPlc5AAAAAAAAAAAASXRCAERq
        OwSG1nmtiNp8/4jafP+S3Ib/oOCU/6bjnP+k4pr/m9uP/2qfb/8xdXD/KKyy/yPO2f8pdnz/m5qc//Dv
        8f/Nzc3/bYNp/4HAd/+a4I3/nOGQ/6HklP+k6Jj/pumb/6Xpmf+j6Zf/mdmOrSUxIgRAWjsAAAAAAAAA
        AABIc0EAQmg7BIbWeq2B2Xf/bNds/3vYdf+U3Yf/n+CU/6Xim/+n453/ot2Y/4++hP9nlnf/QHNn/y5X
        SP83RjX/WGVW/2d+Y/+LxIL/ouOX/6Lklv+g5pT/oemV/6TsmP+o7Zz/qu6e/6nunf+d3pKtJDEhBEFb
        PAAAAAAAAAAAAEZzQABJaUAEetRyrWvXa/9i1mb/ZdZo/3rYdP+Q3IP/md6N/5/glP+j4Zn/puSc/6Da
        lP+U0Ib/hMx4/3XJbv+Cynj/ltSL/6jknv+o5p//o+mX/5/rkf+h7JT/pu6a/6vun/+r7p//puya/5fc
        i60fMBsEPlo4AAAAAAAAAAAAO3I6AD1oOQRj0mWtY9Zm/2PWZv9j1mb/ZdZn/3PXcP952HT/fdl4/4Da
        ff+D23//g9t//3/be/902XL/Ztdp/3jadv+W3oz/ouGY/6Xlmv+i6ZX/n+uT/6Ttl/+p7J3/qeue/6To
        l/+Y5Yz/f9N4rQ0tEAQyVy8AAAAAAAAAAAA1cjYAMGcxBGHSZK1j1mb/Y9Zm/2PWZv9j1mb/YtZm/2PW
        Zv9j1mf/ZNZn/2XWaP9m1mn/ZdZo/2PWZ/9j1mb/ZtZp/3LYcv+D237/ld+K/5vjj/+f5pL/oueV/6Ll
        lv+b4pD/id6C/3Xac/9ky2WtDS0QBChUKQAAAAAAAAAAAD+IQAA3eDkDYtRlqWPWZv9j1mb/Y9Zm/2PW
        Zv9j1mb/Y9Zm/2PWZv9j1mb/Y9Zm/2PWZv9j1mb/Y9Zm/2PWZv9j1mb/Y9Zm/2fWaf9u12//gdp7/4nc
        gP+K3YH/htt//3PYc/9q12z/ZNZn/17LYKkVLBUDLmUwAAAAAAAAAAAARZdIAGzqbwBj1mZ2Y9Zm/mPW
        Zv9j1mb/Y9Zm/2PWZv9j1mb/Y9Zm/2PWZv9j1mb/Y9Zm/2PWZv9j1mb/Y9Zm/2PWZv9j1mb/Y9Zm/2PW
        Zv9l1mf/ZtZo/2bWaP9m1mj/ZNZn/2PWZv9j1mb+X81hd3v/fgA0cjYAAAAAAAAAAAAAAAAAZNhnAGTY
        ZxFk12d2Y9dmqGPXZqlj12apY9dmqWPXZqlj12apY9dmqWPXZqlj12apY9dmqWPXZqlj12apY9dmqWPX
        Zqlj12apY9dmqWPXZqlj12apY9dmqWPXZqlj12apY9dmqGPXZnZg0WMRYtRlAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAZ95qAGfeagBm3GkCZtxpAmbcaQJm3GkCZtxpAmbcaQJm3GkCZtxpAmbcaQJm3GkCZtxpAmbc
        aQJm3GkCZtxpAmbcaQJm3GkCZtxpAmbcaQJm3GkCZtxpAmbcaQJm3GkCZ95qAGffagAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA///////////gAAAH4AAAB+AAAAfAAAADwAAAA8AAAAPAAAADwAAAA8AA
        AAPAAAADwAAAA8AAAAPAAAADwAAAA8AAAAPAAAADwAAAA8AAAAPAAAADwAAAA8AAAAPAAAADwAAAA8AA
        AAPAAAAD4AAAB+AAAAf4AAAf//////////8=
</value>
  </data>
</root>